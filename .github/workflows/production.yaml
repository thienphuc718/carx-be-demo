name: Production Deployment Digital Ocean & GKE

on:
  push:
    branches: [production]

jobs:
#  build:
#    env:
#      CARX_BE_PROD: ${{ secrets.CARX_BE_PROD }}
#    runs-on: [self-hosted, production]
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Inject env
#        run: echo "$CARX_BE_PROD" > .env
#        shell: bash
#
#      - name: Run build
#        run: docker-compose build
#
#      - name: Run up
#        run: docker-compose up -d
#
#      - name: remove none tag images
#        continue-on-error: true
#        run: docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
  gke-deployment:
   env:
     IMAGE_NAME: "eastplayers/${{ github.event.repository.name }}"
     IMAGE_TAG: "production-0.1.${{github.run_number}}"
     IMAGE_TAG_LATEST: "production-latest"
     NAMESPACE: "carx"
     DEPLOYMENT: "carx-be"
     PRODUCTION_ENV: ${{ secrets.CARX_BE_PROD }}
     CONTAINER_NAME: "carx-be"
     GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
     PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
     GKE_LOCATION: ${{ secrets.GKE_LOCATION }}
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_LOCATION }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Setup Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and Push Docker Image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./deployment/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_LATEST }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Dump github context
      run: echo "$GITHUB_CONTEXT"
      shell: bash
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}

    - name: Inject env for upgrading helm chart
      run: echo "$PRODUCTION_ENV" > ${{ github.workspace }}/deployment/carx-be/env
      shell: bash

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.10.2'

    - name: Update image tag
      run: helm upgrade ${{ env.DEPLOYMENT }} ./deployment/carx-be --set image.tag=${{ env.IMAGE_TAG }}

    - name: Checking deployment
      run: kubectl describe deployment ${{ env.DEPLOYMENT }} -n ${{ env.NAMESPACE }}

    - name: Actions Status Discord
      if: always()
      uses: sarisia/actions-status-discord@v1.8.6
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}